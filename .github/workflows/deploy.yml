name: Deploy Terraform and S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Construct a unique bucket name using the actor (username)
    env:
      AWS_REGION: us-east-1
      BUCKET: iac-terraform-be-${{ github.actor }}-bucket

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure S3 bucket exists
        run: |
          # Use the BUCKET from env (no angle brackets!)
          echo "Using bucket: $BUCKET"
          # Check existence robustly
          if aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
            echo "Bucket $BUCKET already exists â€” skipping creation."
          else
            echo "Creating S3 bucket $BUCKET..."
            # For us-east-1 do not set LocationConstraint; for other regions set it.
            if [ "$AWS_REGION" = "us-east-1" ]; then
              aws s3api create-bucket --bucket "$BUCKET"
            else
              aws s3api create-bucket --bucket "$BUCKET" --create-bucket-configuration LocationConstraint="$AWS_REGION"
            fi
          fi

      - name: Sync files to S3
        run: |
          # sync using the same variable
          aws s3 sync . "s3://$BUCKET" --delete --exclude ".git/*" --exclude ".github/*"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Show Lambda URL
        run: terraform output lambda_url
